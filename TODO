performance:
- literals in the body could be ordered by some heuristic see reference in dlv paper
- dont use tons of small vectors in domains instead put all values into 1 big vector
  - domains
  - conditional literals
- use an own vector implementation for value vectors
- optimize memory consumtion/handling in output classes
  - dont use new/delete for all the output objects everytime a rule is grounded
- optimize datastructures (in view of memoryconsumption)
- it would be better to use a ptr_vector or sth like that instead of std::vector<T*>

code:
- find a better way (a. :- a. ? ) to state that no answer set exists
- use more c++ exceptions

documentation:
- write doxygen doc

testing:
- write tests for all allowed language constructs !!!
- test conformance with lparse/gringo

todo:
- handle classical negation in iclaspoutput
- improve text output
- print more statistics

bugs:
- the weights of conditionalliterals are ignored in the literaldependency graph
  this could lead to a failure (but only in rare cases)
